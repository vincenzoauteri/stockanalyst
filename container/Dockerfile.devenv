# Development Tools Container
# Contains: dev packages, system utils, Claude Code, Gemini CLI, ccusage, docker socket access
FROM python:3.12-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Add this line to accept the build argument
ARG DOCKER_GID

# Install system dependencies, development tools, Docker, and Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    git \
    vim \
    build-essential \
    ca-certificates \
    sudo \
    gosu \
    python3 \
    python3-pip \
    python3-venv \
    lsb-release \
    shellcheck \
    gnupg \
    procps \
    net-tools \
    iproute2 \
    htop \
    less \
    tree \
    jq \
    && curl -sL https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint \
    && chmod +x /usr/local/bin/hadolint \
    # Add github cli repo
    && curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    # Add docker repo
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    # Add nodejs repo
    && curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    # Install packages from all sources
    && apt-get update \
    && apt-get install -y gh docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin nodejs \
    # Clean up
    && rm -rf /var/lib/apt/lists/*

# Install Claude Code, Gemini CLI, and ccusage
RUN npm install -g npm@latest \
    && npm install -g @anthropic-ai/claude-code \
    && npm install -g ccusage \
    && npm install -g @google/gemini-cli

# Create non-root user for security
ARG USER_UID=1000
ARG USER_GID=1000
# This is the RUN command to replace
RUN groupadd --gid ${USER_GID} dev \
    && groupdel docker && groupadd --gid ${DOCKER_GID} docker \
    && useradd --uid ${USER_UID} --gid ${USER_GID} --shell /bin/bash --create-home dev \
    && usermod -aG sudo dev \
    && usermod -aG docker dev \
    && echo "dev ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create necessary directories
RUN mkdir -p /app/.claude /home/dev/.claude \
    && chown -R dev:dev /app/.claude /home/dev/.claude

# Set working directory
WORKDIR /app

# Switch to non-root user
USER dev

# Default command
CMD ["bash"]
